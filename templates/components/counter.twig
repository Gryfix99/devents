<div class="sl-counter-grid">
  <div class="sl-counter-cell">
    <span class="sl-counter-icon material-symbols-outlined">event</span>
    <div class="sl-counter-number" data-target="{{ events }}">0</div>
    <div class="sl-counter-label">Wydarzenia</div>
  </div>
  <div class="sl-counter-cell">
    <span class="sl-counter-icon material-symbols-outlined">videocam</span>
    <div class="sl-counter-number" data-target="{{ materials }}">0</div>
    <div class="sl-counter-label">Filmy</div>
  </div>
  <div class="sl-counter-cell">
    <span class="sl-counter-icon material-symbols-outlined">account_circle</span>
    <div class="sl-counter-number" data-target="{{ users }}">0</div>
    <div class="sl-counter-label">UÅ¼ytkownicy</div>
  </div>
</div>

<div class="sl-counter-updated">
  Dane zaktualizowano {{ last_updated }}
</div>

<script>
  (function(){
    const options = { threshold: 0.5 };
    const callback = (entries, obs) => {
      entries.forEach(entry => {
        if (!entry.isIntersecting) return;
        const el = entry.target;
        const target = +el.getAttribute('data-target');
        const duration = 1500; // ms
        const stepTime = Math.abs(Math.floor(duration / target)) || 20;
        let current = 0;
        const timer = setInterval(() => {
          current += 1;
          el.textContent = current;
          if (current >= target) {
            clearInterval(timer);
          }
        }, stepTime);
        obs.unobserve(el);
      });
    };
    const observer = new IntersectionObserver(callback, options);
    document.querySelectorAll('.sl-counter-number').forEach(num => {
      observer.observe(num);
    });
  })();
</script>
